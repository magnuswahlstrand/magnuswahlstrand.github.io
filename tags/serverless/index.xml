<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serverless on wahlstrand.dev</title>
    <link>https://magnuswahlstrand.github.io/tags/serverless/</link>
    <description>Recent content in serverless on wahlstrand.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 26 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://magnuswahlstrand.github.io/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event-based app with Go and EventBridge</title>
      <link>https://magnuswahlstrand.github.io/draft/2022-06-26-event-based-system-on-aws/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://magnuswahlstrand.github.io/draft/2022-06-26-event-based-system-on-aws/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Typesafe serverless API with tRPC</title>
      <link>https://magnuswahlstrand.github.io/articles/2022-06-19-typesafe-http-client-serverless/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://magnuswahlstrand.github.io/articles/2022-06-19-typesafe-http-client-serverless/</guid>
      <description>&lt;p&gt;I have been using React and &lt;a href=&#34;https://react-query.tanstack.com/&#34;&gt;React Query&lt;/a&gt; for most of my hobby projects lately. I
mainly use Typescript, and one of main pain points for me with React Query is the amount of work needed to get the
typing right.&lt;/p&gt;
&lt;p&gt;Yesterday, &lt;a href=&#34;https://twitter.com/thdxr&#34;&gt;Dax Raad&lt;/a&gt; from the &lt;a href=&#34;https://sst.dev/&#34;&gt;Serverless Stack&lt;/a&gt; team pointed
me in the direction of the &lt;a href=&#34;https://trpc.io/&#34;&gt;tRPC&lt;/a&gt; project. It is a framework creating typesafe client and server code
in Typescript. &lt;strong&gt;tRPC&lt;/strong&gt; is a great fit for me as it has&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;great integration with &lt;a href=&#34;https://trpc.io/docs/react&#34;&gt;React and React Query&lt;/a&gt; and&lt;/li&gt;
&lt;li&gt;an adapter for &lt;a href=&#34;https://trpc.io/docs/aws-lambda&#34;&gt;AWS Lambda and the AWS Gateway&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this post, I will show you how to set up a typesafe API in &lt;strong&gt;Typescript&lt;/strong&gt;, with &lt;strong&gt;React&lt;/strong&gt; in the frontend with &lt;strong&gt;AWS
Lambda&lt;/strong&gt; in the backend using &lt;strong&gt;tRPC&lt;/strong&gt; as the glue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://magnuswahlstrand.github.io/img/typesafe-http-client-serverless/setup.png&#34; alt=&#34;setup&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
